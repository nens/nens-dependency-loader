PLUGINNAME = nens_dependency_loader

default: compile

compile: external-dependencies/.generated.marker

# .generated.marker is generated by populate.sh to signify completion.
external-dependencies/.generated.marker: constraints.txt
	cd external-dependencies && ./populate.sh

constraints.txt:
	python3 dependencies.py

test: clean compile
	QT_QPA_PLATFORM=offscreen pytest

zip: compile
	@echo
	@echo "---------------------------"
	@echo "Creating plugin zip bundle."
	@echo "---------------------------"
	rm -rf /tmp/$(PLUGINNAME)
	cd /tmp; cp -r $(CURDIR) $(PLUGINNAME)
	# Remove all dev files
	rm -rf /tmp/$(PLUGINNAME)/tests
	rm -rf /tmp/$(PLUGINNAME)/.git
	rm -rf /tmp/$(PLUGINNAME)/.gitignore
	rm -rf /tmp/$(PLUGINNAME)/.pytest_cache
	rm -rf /tmp/$(PLUGINNAME)/.github
	rm -rf /tmp/$(PLUGINNAME)/*.zip
	rm -rf /tmp/$(PLUGINNAME)/Dockerfile
	rm -rf /tmp/$(PLUGINNAME)/docker-compose.yml
	rm -rf /tmp/$(PLUGINNAME)/docker-compose.override.yml
	rm -rf /tmp/$(PLUGINNAME)/Makefile
	rm -rf /tmp/$(PLUGINNAME)/requirements-dev.txt
	rm -rf /tmp/$(PLUGINNAME)/setup.cfg
	rm -rf /tmp/$(PLUGINNAME)/upload-artifact.sh
	rm -rf /tmp/$(PLUGINNAME)/upload-dev-artifact.sh
	rm -rf /tmp/$(PLUGINNAME)/version.rst
	rm -rf /tmp/$(PLUGINNAME)/.dockerignore
	rm -rf /tmp/$(PLUGINNAME)/deps
	rm -rf /tmp/$(PLUGINNAME)/__pycache__
	find /tmp/$(PLUGINNAME) -iname "*.pyc" -delete
	cd /tmp; zip -9r $(CURDIR)/$(PLUGINNAME).zip $(PLUGINNAME)

check: constraints.txt
	# Use pip-compile to check whether all dependencies version constraints are met.
	cp constraints.txt requirements.in
	pip-compile --dry-run
	rm requirements.in

lint:
	isort .
	black .
	@flake8 . --extend-exclude=deps
	

clean:
	@echo
	@echo "------------------------------------"
	@echo "Deleting dependencies"
	@echo "------------------------------------"
	rm -rf deps
